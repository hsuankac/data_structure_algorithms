Algorithm for enqueue and dequeue operations for a circular queue

Initially:
ITEM IS AN 1-D ARRAY TO HOLD THE QUEUE ELEMENTS
REAR = SIZE - 1
FRONT = SIZE - 1

OPERATION ENQUEUE(V):
   IF (REAR + 1) % SIZE == FRONT THEN
	PRINT "QUEUE OVERFLOW"
	EXIT ENQUEUE
   END IF
   REAR = (REAR + 1) % SIZE
   ITEM[REAR] = V
END ENQUEUE

OPERATION DEQUEUE:
   IF REAR == FRONT THEN
	PRINT "QUEUE UNDERFLOW"
        EXIT DEQUEUE
   END IF
   FRONT = (FRONT + 1) % SIZE
   V = ITEM[FRONT]
   RETURN V
END DEQUEUE